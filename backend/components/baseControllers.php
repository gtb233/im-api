<?php
/**
 * 配置控制器公共方法
 * Date: 2017/12/22
 * Time: 10:47
 */

namespace backend\components;

use yii;
use yii\web\Controller;

class baseControllers extends Controller
{
    public function behaviors()
    {
        $behaviors = parent::behaviors();
//        $behaviors['rateLimiter'] = [
//            'class' => RateLimiter::className(),
//            'enableRateLimitHeaders' => true,
//            'rateLimitGet'=>[1000,60],//60秒内最多只请get请求1000次
//            'rateLimitPost'=>[10,1],//1秒内只能post提交10次
//        ];
        return $behaviors;
    }

    public function beforeAction($action)
    {
        $this->view->title .= Yii::$app->name;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 获取$_GET 参数
     *
     * @param null $name
     * @param null $defaultValue
     * @return array|mixed
     * @example 获取二维数组中的值：$this->get('Collect.category_id');
     */
    public function get($name = null, $defaultValue = null)
    {
        $rs = Yii::$app->getRequest()->get($name, $defaultValue);
        //Collect.category_id 获取 Collect[category_id]
        if ($rs == null && stripos($name, '.') > 0) {
            $arr = explode('.', $name);
            $rs2 = Yii::$app->getRequest()->get($arr[0]);
            if(isset($rs2[$arr[1]])){
                $rs = $rs2[$arr[1]];
            }
        }
        return $rs;
    }

    /**
     * 获取$_POST 参数
     * @param null $name
     * @param null $defaultValue
     * @param bool $removeXss
     * @return array|mixed
     * @example 获取二维数组中的值：$this->post('collect.category_id');
     */
    public function post($name = null, $defaultValue = null,$removeXss = true){
        $rs = Yii::$app->getRequest()->post($name, $defaultValue);
        //Collect.category_id 获取 Collect[category_id]
        if ($rs == null && stripos($name, '.') > 0) {
            $arr = explode('.', $name);
            $rs2 = Yii::$app->getRequest()->post($arr[0]);
            if(isset($rs2[$arr[1]])){
                $rs = $rs2[$arr[1]];
            }
        }
        return $removeXss ? $this->removeXss($rs) : $rs;
    }

    /**
     * xss 过滤
     * 超过7字符串长度的数据做xss过滤
     * @param string|array $var
     * @return string|array
     */
    public function removeXss($var)
    {

        if (is_array($var)) {
            foreach ($var as $k => $v) {
                $var[$k] = $this->removeXss($v);
            }
        } else {
            $var =  mb_strlen($var) > 7 ? HtmlPurifier::process($var) : $var;
        }
        return $var;
    }
}